<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true">
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender" level="INFO">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <jsonGeneratorDecorator
                    class="net.logstash.logback.decorate.FeatureJsonGeneratorDecorator"/>
            <providers>
                <pattern>
                    <pattern>
                        {
                        "date": "%date{yyyy-MM-dd HH:mm:ss}",
                        "level": "%level",
                        "msg": "%msg",
                        "class": "%logger{200}",
                        "thread": "%thread",
                        "line": "%line",
                        "stack_trace": "%exception{500}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>
    <property name="LOG_HOME" value="/gjsk_server/gjsk_fin/supplychainfinance/logs/dev"/>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE-INFO-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/qt/qt-info.log</File>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <FileNamePattern>${LOG_HOME}/qt/%d{yyyy-MM}/qt-info-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <jsonGeneratorDecorator
                    class="net.logstash.logback.decorate.FeatureJsonGeneratorDecorator"/>
            <providers>
                <pattern>
                    <pattern>
                        {
                        "date": "%date{yyyy-MM-dd HH:mm:ss}",
                        "level": "%level",
                        "msg": "%msg",
                        "class": "%logger{200}",
                        "thread": "%thread",
                        "line": "%line",
                        "stack_trace": "%exception{500}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>
    <!-- 按照每天生成日志文件 -->
    <appender name="FILE-ERROR-APPENDER" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <File>${LOG_HOME}/qt/qt-error.log</File>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <FileNamePattern>${LOG_HOME}/qt/%d{yyyy-MM}/qt-error-%d{yyyy-MM-dd}.%i.log</FileNamePattern>
            <!--日志文件保留天数 -->
            <MaxHistory>30</MaxHistory>
            <MaxFileSize>10MB</MaxFileSize>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <jsonGeneratorDecorator
                    class="net.logstash.logback.decorate.FeatureJsonGeneratorDecorator"/>
            <providers>
                <pattern>
                    <pattern>
                        {
                        "date": "%date{yyyy-MM-dd HH:mm:ss}",
                        "level": "%level",
                        "msg": "%msg",
                        "class": "%logger{200}",
                        "thread": "%thread",
                        "line": "%line",
                        "stack_trace": "%exception{500}"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE-INFO-APPENDER"/>
        <appender-ref ref="FILE-ERROR-APPENDER"/>
    </root>
</configuration>